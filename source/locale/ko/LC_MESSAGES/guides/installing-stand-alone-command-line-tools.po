# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013â€“2017, PyPA
# This file is distributed under the same license as the Python Packaging
# User Guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python Packaging User Guide \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-12 11:38+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../guides/installing-stand-alone-command-line-tools.rst:2
msgid "Installing stand alone command line tools"
msgstr ""

#: ../../guides/installing-stand-alone-command-line-tools.rst:4
msgid ""
"Many packages have command line entry points. Examples of this type of "
"application are `mypy <https://github.com/python/mypy>`_, `flake8 "
"<https://github.com/PyCQA/flake8>`_, `pipenv "
"<https://github.com/pypa/pipenv>`_,and `black "
"<https://github.com/ambv/black>`_."
msgstr ""

#: ../../guides/installing-stand-alone-command-line-tools.rst:10
msgid ""
"Usually you want to be able to access these from anywhere, but installing"
" packages and their dependencies to the same global environment can cause"
" version conflicts and break dependencies the operating system has on "
"Python packages."
msgstr ""

#: ../../guides/installing-stand-alone-command-line-tools.rst:15
msgid ""
"`pipx <https://github.com/pipxproject/pipx>`_ solves this by creating a "
"virtual environment for each package, while also ensuring that package's "
"applications are accessible through a directory that is on your "
"``$PATH``. This allows each package to be upgraded or uninstalled without"
" causing conflicts with other packages, and allows you to safely run the "
"program from anywhere."
msgstr ""

#: ../../guides/installing-stand-alone-command-line-tools.rst:21
msgid "pipx only works with Python 3.6+."
msgstr ""

#: ../../guides/installing-stand-alone-command-line-tools.rst:23
msgid "``pipx`` is installed with ``pip``:"
msgstr ""

#: ../../guides/installing-stand-alone-command-line-tools.rst:30
msgid "You may need to restart your terminal for the path updates to take effect."
msgstr ""

#: ../../guides/installing-stand-alone-command-line-tools.rst:32
msgid ""
"Now you can install packages with ``pipx install`` and access the "
"package's entry point(s) from anywhere."
msgstr ""

#: ../../guides/installing-stand-alone-command-line-tools.rst:39
#: ../../guides/installing-stand-alone-command-line-tools.rst:100
msgid "For example"
msgstr ""

#: ../../guides/installing-stand-alone-command-line-tools.rst:59
msgid ""
"To see a list of packages installed with pipx and which CLI applications "
"are available, use ``pipx list``."
msgstr ""

#: ../../guides/installing-stand-alone-command-line-tools.rst:79
msgid "To upgrade or uninstall the package"
msgstr ""

#: ../../guides/installing-stand-alone-command-line-tools.rst:86
msgid "``pipx`` can be upgraded or uninstalled with pip"
msgstr ""

#: ../../guides/installing-stand-alone-command-line-tools.rst:93
msgid ""
"``pipx`` also allows you to install and run the latest version of a cli "
"tool in a temporary, ephemeral environment."
msgstr ""

#: ../../guides/installing-stand-alone-command-line-tools.rst:106
msgid "To see the full list of commands ``pipx`` offers, run"
msgstr ""

#: ../../guides/installing-stand-alone-command-line-tools.rst:112
msgid ""
"You can learn more about ``pipx`` at its homepage, "
"https://github.com/pipxproject/pipx."
msgstr ""

