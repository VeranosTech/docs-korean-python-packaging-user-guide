# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013–2017, PyPA
# This file is distributed under the same license as the Python Packaging
# User Guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python Packaging User Guide \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-12 11:38+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../key_projects.rst:6
msgid "Project Summaries"
msgstr ""

#: ../../key_projects.rst:8
msgid ""
"Summaries and links for the most relevant projects in the space of Python"
" installation and packaging."
msgstr ""

#: ../../key_projects.rst:14
msgid "PyPA Projects"
msgstr ""

#: ../../key_projects.rst:19
msgid "bandersnatch"
msgstr ""

#: ../../key_projects.rst:21
msgid ""
"`Mailing list <http://mail.python.org/mailman/listinfo/distutils-sig>`__ "
"[2]_ | `Issues <https://github.com/pypa/bandersnatch/issues>`__ | `Github"
" <https://github.com/pypa/bandersnatch>`__ | `PyPI "
"<https://pypi.org/project/bandersnatch>`__ | Dev irc:#bandersnatch"
msgstr ""

#: ../../key_projects.rst:27
msgid ""
"bandersnatch is a PyPI mirroring client designed to efficiently create a "
"complete mirror of the contents of PyPI."
msgstr ""

#: ../../key_projects.rst:34
msgid "distlib"
msgstr ""

#: ../../key_projects.rst:36
msgid ""
"`Docs <http://pythonhosted.org/distlib/>`__ | `Mailing list "
"<http://mail.python.org/mailman/listinfo/distutils-sig>`__ [2]_ | `Issues"
" <https://bitbucket.org/pypa/distlib/issues?status=new&status=open>`__ | "
"`Bitbucket <https://bitbucket.org/pypa/distlib>`__ | `PyPI "
"<https://pypi.org/project/distlib>`__"
msgstr ""

#: ../../key_projects.rst:42
msgid ""
"Distlib is a library which implements low-level functions that relate to "
"packaging and distribution of Python software.  It consists in part of "
"the functions from the `distutils2 "
"<https://pypi.org/project/Distutils2>`_ project, which was intended to be"
" released as ``packaging`` in the Python 3.3 stdlib, but was removed "
"shortly before Python 3.3 entered beta testing."
msgstr ""

#: ../../key_projects.rst:52
msgid "packaging"
msgstr ""

#: ../../key_projects.rst:54
msgid ""
"`Docs <https://packaging.pypa.io>`__ | `Dev list "
"<http://groups.google.com/group/pypa-dev>`__ | `Issues "
"<https://github.com/pypa/packaging/issues>`__ | `Github "
"<https://github.com/pypa/packaging>`__ | `PyPI "
"<https://pypi.org/project/packaging>`__ | User irc:#pypa | Dev irc:#pypa-"
"dev"
msgstr ""

#: ../../key_projects.rst:62
msgid ""
"Core utilities for Python packaging used by :ref:`pip` and "
":ref:`setuptools`."
msgstr ""

#: ../../key_projects.rst:68
msgid "pip"
msgstr ""

#: ../../key_projects.rst:70
msgid ""
"`Docs <https://pip.pypa.io/en/stable/>`__ | `User list "
"<http://groups.google.com/group/python-virtualenv>`__ [1]_ | `Dev list "
"<http://groups.google.com/group/pypa-dev>`__ | `Issues "
"<https://github.com/pypa/pip/issues>`__ | `Github "
"<https://github.com/pypa/pip>`__ | `PyPI "
"<https://pypi.org/project/pip/>`__ | User irc:#pypa | Dev irc:#pypa-dev"
msgstr ""

#: ../../key_projects.rst:79
msgid "A tool for installing Python packages."
msgstr ""

#: ../../key_projects.rst:85
msgid "Pipenv"
msgstr ""

#: ../../key_projects.rst:87
msgid ""
"`Docs <https://docs.pipenv.org>`__ | `Source "
"<https://github.com/pypa/pipenv>`__ | `Issues "
"<https://github.com/pypa/pipenv/issues>`__ | `PyPI "
"<https://pypi.org/project/pipenv>`__"
msgstr ""

#: ../../key_projects.rst:92
msgid ""
"Pipenv is a project that aims to bring the best of all packaging worlds "
"to the Python world. It harnesses :ref:`Pipfile`, :ref:`pip`, and "
":ref:`virtualenv` into one single toolchain. It features very pretty "
"terminal colors."
msgstr ""

#: ../../key_projects.rst:100
msgid "Pipfile"
msgstr ""

#: ../../key_projects.rst:102
msgid "`Source <https://github.com/pypa/pipfile>`__"
msgstr ""

#: ../../key_projects.rst:104
msgid ""
":file:`Pipfile` and its sister :file:`Pipfile.lock` are a higher-level "
"application-centric alternative to :ref:`pip`'s lower-level "
":file:`requirements.txt` file."
msgstr ""

#: ../../key_projects.rst:110
msgid "Python Packaging User Guide"
msgstr ""

#: ../../key_projects.rst:112
msgid ""
"`Docs <https://packaging.python.org/en/latest/>`__ | `Mailing list "
"<http://mail.python.org/mailman/listinfo/distutils-sig>`__ | `Issues "
"<https://github.com/pypa/python-packaging-user-guide/issues>`__ | `Github"
" <https://github.com/pypa/python-packaging-user-guide>`__ | User "
"irc:#pypa | Dev irc:#pypa-dev"
msgstr ""

#: ../../key_projects.rst:119
msgid "This guide!"
msgstr ""

#: ../../key_projects.rst:126
msgid "setuptools"
msgstr ""

#: ../../key_projects.rst:128
msgid ""
"`Docs <https://setuptools.readthedocs.io/en/latest/>`__ | `User list "
"<http://mail.python.org/mailman/listinfo/distutils-sig>`__ [2]_ | `Dev "
"list <http://groups.google.com/group/pypa-dev>`__ | `Issues "
"<https://github.com/pypa/setuptools/issues>`__ | `GitHub "
"<https://github.com/pypa/setuptools>`__ | `PyPI "
"<https://pypi.org/project/setuptools>`__ | User irc:#pypa  | Dev irc"
":#pypa-dev"
msgstr ""

#: ../../key_projects.rst:138
msgid ""
"setuptools (which includes ``easy_install``) is a collection of "
"enhancements to the Python distutils that allow you to more easily build "
"and distribute Python distributions, especially ones that have "
"dependencies on other packages."
msgstr ""

#: ../../key_projects.rst:142
msgid ""
"`distribute`_ was a fork of setuptools that was merged back into "
"setuptools (in v0.7), thereby making setuptools the primary choice for "
"Python packaging."
msgstr ""

#: ../../key_projects.rst:149
msgid "twine"
msgstr ""

#: ../../key_projects.rst:151
msgid ""
"`Mailing list <http://mail.python.org/mailman/listinfo/distutils-sig>`__ "
"[2]_ | `Issues <https://github.com/pypa/twine/issues>`__ | `Github "
"<https://github.com/pypa/twine>`__ | `PyPI "
"<https://pypi.org/project/twine>`__"
msgstr ""

#: ../../key_projects.rst:156
msgid ""
"Twine is a utility for interacting with PyPI, that offers a secure "
"replacement for ``setup.py upload``."
msgstr ""

#: ../../key_projects.rst:164
msgid "virtualenv"
msgstr ""

#: ../../key_projects.rst:166
msgid ""
"`Docs <https://virtualenv.pypa.io/en/stable/>`__ | `User list "
"<http://groups.google.com/group/python-virtualenv>`__ | `Dev list "
"<http://groups.google.com/group/pypa-dev>`__ | `Issues "
"<https://github.com/pypa/virtualenv/issues>`__ | `Github "
"<https://github.com/pypa/virtualenv>`__ | `PyPI "
"<https://pypi.org/project/virtualenv/>`__ | User irc:#pypa  | Dev irc"
":#pypa-dev"
msgstr ""

#: ../../key_projects.rst:175
msgid "A tool for creating isolated Python environments."
msgstr ""

#: ../../key_projects.rst:181
msgid "Warehouse"
msgstr ""

#: ../../key_projects.rst:183
msgid ""
"`Docs <https://warehouse.pypa.io/>`__ | `Mailing list "
"<http://mail.python.org/mailman/listinfo/distutils-sig>`__ [2]_ | `Issues"
" <https://github.com/pypa/warehouse/issues>`__ | `Github "
"<https://github.com/pypa/warehouse>`__ | Dev irc:#pypa-dev"
msgstr ""

#: ../../key_projects.rst:190
msgid ""
"The current codebase powering the :term:`Python Package Index (PyPI)`. It"
" is hosted at `pypi.org <https://pypi.org/>`_."
msgstr ""

#: ../../key_projects.rst:197
msgid "wheel"
msgstr ""

#: ../../key_projects.rst:199
msgid ""
"`Docs <https://wheel.readthedocs.io/en/latest/>`__ | `Mailing list "
"<http://mail.python.org/mailman/listinfo/distutils-sig>`__ [2]_ | `Issues"
" <https://github.com/pypa/wheel/issues>`__ | `Github "
"<https://github.com/pypa/wheel>`__ | `PyPI "
"<https://pypi.org/project/wheel>`__ | User irc:#pypa  | Dev irc:#pypa-dev"
msgstr ""

#: ../../key_projects.rst:208
msgid ""
"Primarily, the wheel project offers the ``bdist_wheel`` :ref:`setuptools`"
" extension for creating :term:`wheel distributions <Wheel>`.  "
"Additionally, it offers its own command line utility for creating and "
"installing wheels."
msgstr ""

#: ../../key_projects.rst:214
msgid "Non-PyPA Projects"
msgstr ""

#: ../../key_projects.rst:219
msgid "bento"
msgstr ""

#: ../../key_projects.rst:221
msgid ""
"`Docs <http://cournape.github.io/Bento/>`__ | `Mailing list "
"<http://librelist.com/browser/bento>`__ | `Issues "
"<https://github.com/cournape/Bento/issues>`__ | `Github "
"<https://github.com/cournape/Bento>`__ | `PyPI "
"<https://pypi.org/project/bento>`__"
msgstr ""

#: ../../key_projects.rst:227
msgid ""
"Bento is a packaging tool solution for Python software, targeted as an "
"alternative to distutils, setuptools, distribute, etc....  Bento's "
"philosophy is reproducibility, extensibility and simplicity (in that "
"order)."
msgstr ""

#: ../../key_projects.rst:234
msgid "buildout"
msgstr ""

#: ../../key_projects.rst:236
msgid ""
"`Docs <http://www.buildout.org/en/latest/>`__ | `Mailing list "
"<http://mail.python.org/mailman/listinfo/distutils-sig>`__ [2]_ | `Issues"
" <https://bugs.launchpad.net/zc.buildout>`__ | `PyPI "
"<https://pypi.org/project/zc.buildout>`__ | irc:#buildout"
msgstr ""

#: ../../key_projects.rst:242
msgid ""
"Buildout is a Python-based build system for creating, assembling and "
"deploying applications from multiple parts, some of which may be non-"
"Python-based.  It lets you create a buildout configuration and reproduce "
"the same software later."
msgstr ""

#: ../../key_projects.rst:249
msgid "conda"
msgstr ""

#: ../../key_projects.rst:251
msgid "`Docs <http://conda.pydata.org/docs/>`__"
msgstr ""

#: ../../key_projects.rst:253
msgid ""
"conda is the package management tool for `Anaconda "
"<https://docs.anaconda.com/anaconda/>`__ Python installations. Anaconda "
"Python is a distribution from `Anaconda, Inc "
"<https://www.anaconda.com/download>`__ specifically aimed at the "
"scientific community, and in particular on Windows where the installation"
" of binary extensions is often difficult."
msgstr ""

#: ../../key_projects.rst:260
msgid ""
"Conda is a completely separate tool to pip, virtualenv and wheel, but "
"provides many of their combined features in terms of package management, "
"virtual environment management and deployment of binary extensions."
msgstr ""

#: ../../key_projects.rst:264
msgid ""
"Conda does not install packages from PyPI and can install only from the "
"official Anaconda repositories, or anaconda.org (a place for user-"
"contributed *conda* packages), or a local (e.g. intranet) package server."
" However, note that pip can be installed into, and work side-by-side with"
" conda for managing distributions from PyPI."
msgstr ""

#: ../../key_projects.rst:272
msgid "devpi"
msgstr ""

#: ../../key_projects.rst:274
msgid ""
"`Docs <http://doc.devpi.net/latest/>`__ | `Mailing List "
"<https://groups.google.com/forum/#!forum/devpi-dev>`__ | `Issues "
"<https://bitbucket.org/hpk42/devpi/issues>`__ | `PyPI "
"<https://pypi.org/project/devpi>`__"
msgstr ""

#: ../../key_projects.rst:279
msgid ""
"devpi features a powerful PyPI-compatible server and PyPI proxy cache "
"with a complimentary command line tool to drive packaging, testing and "
"release activities with Python."
msgstr ""

#: ../../key_projects.rst:287
msgid "flit"
msgstr ""

#: ../../key_projects.rst:289
msgid ""
"`Docs <https://flit.readthedocs.io/en/latest/>`__ | `Issues "
"<https://github.com/takluyver/flit/issues>`__ | `PyPI "
"<https://pypi.org/project/flit>`__"
msgstr ""

#: ../../key_projects.rst:293
msgid ""
"Flit is a simple way to put Python packages and modules on PyPI. Flit "
"packages a single importable module or package at a time, using the "
"import name as the name on PyPI. All subpackages and data files within a "
"package are included automatically. Flit requires Python 3, but you can "
"use it to distribute modules for Python 2, so long as they can be "
"imported on Python 3."
msgstr ""

#: ../../key_projects.rst:300
msgid "enscons"
msgstr ""

#: ../../key_projects.rst:302
msgid ""
"`Source <https://bitbucket.org/dholth/enscons/src>`__ | `Issues "
"<https://bitbucket.org/dholth/enscons/issues>`__ | `PyPI "
"<https://pypi.org/project/enscons>`__"
msgstr ""

#: ../../key_projects.rst:306
msgid ""
"Enscons is a Python packaging tool based on `SCons`_. It builds pip-"
"compatible source distributions and wheels without using distutils or "
"setuptools, including distributions with C extensions. Enscons has a "
"different architecture and philosophy than distutils. Rather than adding "
"build features to a Python packaging system, enscons adds Python "
"packaging to a general purpose build system. Enscons helps you to build "
"sdists that can be automatically built by pip, and wheels that are "
"independent of enscons."
msgstr ""

#: ../../key_projects.rst:319
msgid "Hashdist"
msgstr ""

#: ../../key_projects.rst:321
msgid ""
"`Docs <https://hashdist.readthedocs.io/en/latest/>`__ | `Github "
"<https://github.com/hashdist/hashdist/>`__"
msgstr ""

#: ../../key_projects.rst:324
msgid ""
"Hashdist is a library for building non-root software distributions. "
"Hashdist is trying to be “the Debian of choice for cases where Debian "
"technology doesn’t work”. The best way for Pythonistas to think about "
"Hashdist may be a more powerful hybrid of virtualenv and buildout."
msgstr ""

#: ../../key_projects.rst:332
msgid "pex"
msgstr ""

#: ../../key_projects.rst:334
msgid ""
"`Docs <https://pex.readthedocs.io/en/latest/>`__ | `Github "
"<https://github.com/pantsbuild/pex/>`__ | `PyPI "
"<https://pypi.org/project/pex>`__"
msgstr ""

#: ../../key_projects.rst:338
msgid ""
"pex is both a library and tool for generating :file:`.pex` (Python "
"EXecutable) files, standalone Python environments in the spirit of "
":ref:`virtualenv`. :file:`.pex` files are just carefully constructed zip "
"files with a ``#!/usr/bin/env python`` and special :file:`__main__.py`, "
"and are designed to make deployment of Python applications as simple as "
"``cp``."
msgstr ""

#: ../../key_projects.rst:347
msgid "pipx"
msgstr ""

#: ../../key_projects.rst:349
msgid ""
"`Docs <https://github.com/pipxproject/pipx>`__ | `Github "
"<https://github.com/pipxproject/pipx>`__ | `PyPI "
"<https://pypi.org/project/pipx/>`__"
msgstr ""

#: ../../key_projects.rst:353
msgid "pipx is a tool to safely install and run Python CLI applications globally."
msgstr ""

#: ../../key_projects.rst:358
msgid "scikit-build"
msgstr ""

#: ../../key_projects.rst:360
msgid ""
"`Docs <https://scikit-build.readthedocs.io/en/latest/>`__ | `Mailing list"
" <https://groups.google.com/forum/#!forum/scikit-build>`__ | `Github "
"<https://github.com/scikit-build/scikit-build/>`__ | `PyPI "
"<https://pypi.org/project/scikit-build>`__"
msgstr ""

#: ../../key_projects.rst:365
msgid ""
"Scikit-build is an improved build system generator for CPython "
"C/C++/Fortran/Cython extensions that integrates with :ref:`setuptools`, "
":ref:`wheel` and :ref:`pip`. It internally uses `cmake "
"<https://pypi.org/project/cmake>`__ (available on PyPI) to provide better"
" support for additional compilers, build systems, cross compilation, and "
"locating dependencies and their associated build requirements. To speed "
"up and parallelize the build of large projects, the user can install "
"`ninja <https://pypi.org/project/ninja>`__ (also available on PyPI)."
msgstr ""

#: ../../key_projects.rst:377
msgid "shiv"
msgstr ""

#: ../../key_projects.rst:379
msgid ""
"`Docs <https://shiv.readthedocs.io/en/latest/>`__ | `Github "
"<https://github.com/linkedin/shiv>`__ | `PyPI "
"<https://pypi.org/project/shiv/>`__"
msgstr ""

#: ../../key_projects.rst:383
msgid ""
"shiv is a command line utility for building fully self contained Python "
"zipapps as outlined in PEP 441, but with all their dependencies included."
" It's primary goal is making distributing Python applications and command"
" line tools fast & easy."
msgstr ""

#: ../../key_projects.rst:390
msgid "Spack"
msgstr ""

#: ../../key_projects.rst:392
msgid ""
"`Docs <http://software.llnl.gov/spack/>`__ | `Github "
"<https://github.com/llnl/spack/>`__ | `Paper "
"<http://www.computer.org/csdl/proceedings/sc/2015/3723/00/2807623.pdf>`__"
" | `Slides <https://tgamblin.github.io/files/Gamblin-Spack-"
"SC15-Talk.pdf>`__"
msgstr ""

#: ../../key_projects.rst:397
msgid ""
"A flexible package manager designed to support multiple versions, "
"configurations, platforms, and compilers.  Spack is like homebrew, but "
"packages are written in Python and parameterized to allow easy swapping "
"of compilers, library versions, build options, etc. Arbitrarily many "
"versions of packages can coexist on the same system. Spack was designed "
"for rapidly building high performance scientific applications on clusters"
" and supercomputers."
msgstr ""

#: ../../key_projects.rst:405
msgid ""
"Spack is not in PyPI (yet), but it requires no installation and can be "
"used immediately after cloning from github."
msgstr ""

#: ../../key_projects.rst:410
msgid "Standard Library Projects"
msgstr ""

#: ../../key_projects.rst:415
msgid "ensurepip"
msgstr ""

#: ../../key_projects.rst:417
msgid ""
"`Docs <https://docs.python.org/3/library/ensurepip.html>`__ | `Issues "
"<http://bugs.python.org>`__"
msgstr ""

#: ../../key_projects.rst:420
msgid ""
"A package in the Python Standard Library that provides support for "
"bootstrapping :ref:`pip` into an existing Python installation or virtual "
"environment.  In most cases, end users won't use this module, but rather "
"it will be used during the build of the Python distribution."
msgstr ""

#: ../../key_projects.rst:429
msgid "distutils"
msgstr ""

#: ../../key_projects.rst:431
msgid ""
"`Docs <https://docs.python.org/3/library/distutils.html>`__ | `User list "
"<http://mail.python.org/mailman/listinfo/distutils-sig>`__ [2]_ | `Issues"
" <http://bugs.python.org>`__ | User irc:#pypa  | Dev irc:#pypa-dev"
msgstr ""

#: ../../key_projects.rst:437
msgid ""
"A package in the Python Standard Library that has support for creating "
"and installing :term:`distributions <Distribution Package>`. "
":ref:`Setuptools` provides enhancements to distutils, and is much more "
"commonly used than just using distutils by itself."
msgstr ""

#: ../../key_projects.rst:446
msgid "venv"
msgstr ""

#: ../../key_projects.rst:448
msgid ""
"`Docs <https://docs.python.org/3/library/venv.html>`__ | `Issues "
"<http://bugs.python.org>`__"
msgstr ""

#: ../../key_projects.rst:451
msgid ""
"A package in the Python Standard Library (starting with Python 3.3) for "
"creating :term:`Virtual Environments <Virtual Environment>`.  For more "
"information, see the section on :ref:`Creating and using Virtual "
"Environments`."
msgstr ""

#: ../../key_projects.rst:458
msgid ""
"pip was created by the same developer as virtualenv, and early on adopted"
" the virtualenv mailing list, and it's stuck ever since."
msgstr ""

#: ../../key_projects.rst:461
msgid "Multiple projects reuse the distutils-sig mailing list as their user list."
msgstr ""

