# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013â€“2017, PyPA
# This file is distributed under the same license as the Python Packaging
# User Guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python Packaging User Guide \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-12-18 14:42+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/discussions/install-requires-vs-requirements.rst:5
msgid "install_requires vs requirements files"
msgstr ""

#: ../../source/discussions/install-requires-vs-requirements.rst:9
msgid "Contents"
msgstr ""

#: ../../source/discussions/install-requires-vs-requirements.rst:12
msgid "install_requires"
msgstr ""

#: ../../source/discussions/install-requires-vs-requirements.rst:14
msgid ""
"``install_requires`` is a :ref:`setuptools` :file:`setup.py` keyword that"
" should be used to specify what a project **minimally** needs to run "
"correctly. When the project is installed by :ref:`pip`, this is the "
"specification that is used to install its dependencies."
msgstr ""

#: ../../source/discussions/install-requires-vs-requirements.rst:19
msgid ""
"For example, if the project requires A and B, your ``install_requires`` "
"would be like so:"
msgstr ""

#: ../../source/discussions/install-requires-vs-requirements.rst:29
msgid ""
"Additionally, it's best practice to indicate any known lower or upper "
"bounds."
msgstr ""

#: ../../source/discussions/install-requires-vs-requirements.rst:31
msgid ""
"For example, it may be known, that your project requires at least v1 of "
"'A', and v2 of 'B', so it would be like so:"
msgstr ""

#: ../../source/discussions/install-requires-vs-requirements.rst:41
msgid ""
"It may also be known that project A follows semantic versioning, and that"
" v2 of 'A' will indicate a break in compatibility, so it makes sense to "
"not allow v2:"
msgstr ""

#: ../../source/discussions/install-requires-vs-requirements.rst:51
msgid ""
"It is not considered best practice to use ``install_requires`` to pin "
"dependencies to specific versions, or to specify sub-dependencies (i.e. "
"dependencies of your dependencies).  This is overly-restrictive, and "
"prevents the user from gaining the benefit of dependency upgrades."
msgstr ""

#: ../../source/discussions/install-requires-vs-requirements.rst:56
msgid ""
"Lastly, it's important to understand that ``install_requires`` is a "
"listing of \"Abstract\" requirements, i.e just names and version "
"restrictions that don't determine where the dependencies will be "
"fulfilled from (i.e. from what index or source).  The where (i.e. how "
"they are to be made \"Concrete\") is to be determined at install time "
"using :ref:`pip` options. [1]_"
msgstr ""

#: ../../source/discussions/install-requires-vs-requirements.rst:64
msgid "Requirements files"
msgstr ""

#: ../../source/discussions/install-requires-vs-requirements.rst:66
msgid ""
":ref:`Requirements Files <pip:Requirements Files>` described most simply,"
" are just a list of :ref:`pip:pip install` arguments placed into a file."
msgstr ""

#: ../../source/discussions/install-requires-vs-requirements.rst:69
msgid ""
"Whereas ``install_requires`` defines the dependencies for a single "
"project, :ref:`Requirements Files <pip:Requirements Files>` are often "
"used to define the requirements for a complete Python environment."
msgstr ""

#: ../../source/discussions/install-requires-vs-requirements.rst:73
msgid ""
"Whereas ``install_requires`` requirements are minimal, requirements files"
" often contain an exhaustive listing of pinned versions for the purpose "
"of achieving :ref:`repeatable installations <pip:Repeatability>` of a "
"complete environment."
msgstr ""

#: ../../source/discussions/install-requires-vs-requirements.rst:78
msgid ""
"Whereas ``install_requires`` requirements are \"Abstract\", i.e. not "
"associated with any particular index, requirements files often contain "
"pip options like ``--index-url`` or ``--find-links`` to make requirements"
" \"Concrete\", i.e. associated with a particular index or directory of "
"packages. [1]_"
msgstr ""

#: ../../source/discussions/install-requires-vs-requirements.rst:84
msgid ""
"Whereas ``install_requires`` metadata is automatically analyzed by pip "
"during an install, requirements files are not, and only are used when a "
"user specifically installs them using ``pip install -r``."
msgstr ""

#: ../../source/discussions/install-requires-vs-requirements.rst:90
msgid ""
"For more on \"Abstract\" vs \"Concrete\" requirements, see "
"https://caremad.io/2013/07/setup-vs-requirement/."
msgstr ""

