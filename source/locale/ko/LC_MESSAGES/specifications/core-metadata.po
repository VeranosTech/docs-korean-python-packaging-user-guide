# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013â€“2017, PyPA
# This file is distributed under the same license as the Python Packaging
# User Guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python Packaging User Guide \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-12-18 14:42+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/specifications/core-metadata.rst:5
msgid "Core metadata specifications"
msgstr ""

#: ../../source/specifications/core-metadata.rst:7
msgid ""
"The current core metadata file format, version 2.1, is specified in "
":pep:`566`. It defines the following specification as the canonical "
"source for the core metadata file format."
msgstr ""

#: ../../source/specifications/core-metadata.rst:11
msgid ""
"Fields defined in the following specification should be considered valid,"
" complete and not subject to change. The required fields are:"
msgstr ""

#: ../../source/specifications/core-metadata.rst:14
msgid "``Metadata-Version``"
msgstr ""

#: ../../source/specifications/core-metadata.rst:15
msgid "``Name``"
msgstr ""

#: ../../source/specifications/core-metadata.rst:16
msgid "``Version``"
msgstr ""

#: ../../source/specifications/core-metadata.rst:18
msgid "All the other fields are optional."
msgstr ""

#: ../../source/specifications/core-metadata.rst:20
msgid ""
"*Interpreting old metadata:* In :pep:`566`, the version specifier field "
"format specification was relaxed to accept the syntax used by popular "
"publishing tools (namely to remove the requirement that version "
"specifiers must be surrounded by parentheses). Metadata consumers may "
"want to use the more relaxed formatting rules even for metadata files "
"that are nominally less than version 2.1."
msgstr ""

#: ../../source/specifications/core-metadata.rst:28
msgid "Contents"
msgstr ""

#: ../../source/specifications/core-metadata.rst:31
msgid "Metadata-Version"
msgstr ""

#: ../../source/specifications/core-metadata.rst:35
msgid ""
"Version of the file format; legal values are \"1.0\", \"1.1\", \"1.2\" "
"and \"2.1\"."
msgstr ""

#: ../../source/specifications/core-metadata.rst:37
msgid ""
"Automated tools consuming metadata SHOULD warn if ``metadata_version`` is"
" greater than the highest version they support, and MUST fail if "
"``metadata_version`` has a greater major version than the highest version"
" they support (as described in :pep:`440`, the major version is the value"
" before the first dot)."
msgstr ""

#: ../../source/specifications/core-metadata.rst:43
msgid ""
"For broader compatibility, build tools MAY choose to produce distribution"
" metadata using the lowest metadata version that includes all of the "
"needed fields."
msgstr ""

#: ../../source/specifications/core-metadata.rst:47
#: ../../source/specifications/core-metadata.rst:67
#: ../../source/specifications/core-metadata.rst:80
#: ../../source/specifications/core-metadata.rst:110
#: ../../source/specifications/core-metadata.rst:123
#: ../../source/specifications/core-metadata.rst:159
#: ../../source/specifications/core-metadata.rst:232
#: ../../source/specifications/core-metadata.rst:236
#: ../../source/specifications/core-metadata.rst:240
#: ../../source/specifications/core-metadata.rst:244
#: ../../source/specifications/core-metadata.rst:274
#: ../../source/specifications/core-metadata.rst:287
#: ../../source/specifications/core-metadata.rst:311
#: ../../source/specifications/core-metadata.rst:327
#: ../../source/specifications/core-metadata.rst:350
#: ../../source/specifications/core-metadata.rst:370
#: ../../source/specifications/core-metadata.rst:524
#: ../../source/specifications/core-metadata.rst:543
#: ../../source/specifications/core-metadata.rst:553
msgid "Example::"
msgstr ""

#: ../../source/specifications/core-metadata.rst:53
msgid "Name"
msgstr ""

#: ../../source/specifications/core-metadata.rst:56
msgid "Added additional restrictions on format from :pep:`508`"
msgstr ""

#: ../../source/specifications/core-metadata.rst:59
msgid ""
"The name of the distribution. The name field is the primary identifier "
"for a distribution. A valid name consists only of ASCII letters and "
"numbers, period, underscore and hyphen. It must start and end with a "
"letter or number. Distribution names are limited to those which match the"
" following regex (run with ``re.IGNORECASE``)::"
msgstr ""

#: ../../source/specifications/core-metadata.rst:73
msgid "Version"
msgstr ""

#: ../../source/specifications/core-metadata.rst:77
msgid ""
"A string containing the distribution's version number.  This field  must "
"be in the format specified in PEP 440."
msgstr ""

#: ../../source/specifications/core-metadata.rst:86
msgid "Platform (multiple use)"
msgstr ""

#: ../../source/specifications/core-metadata.rst:90
msgid ""
"A Platform specification describing an operating system supported by the "
"distribution which is not listed in the \"Operating System\" Trove "
"classifiers. See \"Classifier\" below."
msgstr ""

#: ../../source/specifications/core-metadata.rst:94
#: ../../source/specifications/core-metadata.rst:393
#: ../../source/specifications/core-metadata.rst:416
#: ../../source/specifications/core-metadata.rst:454
#: ../../source/specifications/core-metadata.rst:475
#: ../../source/specifications/core-metadata.rst:509
#: ../../source/specifications/core-metadata.rst:616
#: ../../source/specifications/core-metadata.rst:645
msgid "Examples::"
msgstr ""

#: ../../source/specifications/core-metadata.rst:101
msgid "Supported-Platform (multiple use)"
msgstr ""

#: ../../source/specifications/core-metadata.rst:105
msgid ""
"Binary distributions containing a PKG-INFO file will use the Supported-"
"Platform field in their metadata to specify the OS and CPU for which the "
"binary distribution was compiled.  The semantics of the Supported-"
"Platform field are not specified in this PEP."
msgstr ""

#: ../../source/specifications/core-metadata.rst:117
msgid "Summary"
msgstr ""

#: ../../source/specifications/core-metadata.rst:121
msgid "A one-line summary of what the distribution does."
msgstr ""

#: ../../source/specifications/core-metadata.rst:136
msgid "Description"
msgstr ""

#: ../../source/specifications/core-metadata.rst:139
msgid "This field may be specified in the message body instead."
msgstr ""

#: ../../source/specifications/core-metadata.rst:142
msgid ""
"A longer description of the distribution that can run to several "
"paragraphs.  Software that deals with metadata should not assume any "
"maximum size for this field, though people shouldn't include their "
"instruction manual as the description."
msgstr ""

#: ../../source/specifications/core-metadata.rst:147
msgid ""
"The contents of this field can be written using reStructuredText markup "
"[1]_.  For programs that work with the metadata, supporting markup is "
"optional; programs can also display the contents of the field as-is.  "
"This means that authors should be conservative in the markup they use."
msgstr ""

#: ../../source/specifications/core-metadata.rst:153
msgid ""
"To support empty lines and lines with indentation with respect to the RFC"
" 822 format, any CRLF character has to be suffixed by 7 spaces followed "
"by a pipe (\"|\") char. As a result, the Description field is encoded "
"into a folded field that can be interpreted by RFC822 parser [2]_."
msgstr ""

#: ../../source/specifications/core-metadata.rst:170
msgid ""
"This encoding implies that any occurrences of a CRLF followed by 7 spaces"
" and a pipe char have to be replaced by a single CRLF when the field is "
"unfolded using a RFC822 reader."
msgstr ""

#: ../../source/specifications/core-metadata.rst:174
msgid ""
"Alternatively, the distribution's description may instead be provided in "
"the message body (i.e., after a completely blank line following the "
"headers, with no indentation or other special formatting necessary)."
msgstr ""

#: ../../source/specifications/core-metadata.rst:181
msgid "Description-Content-Type"
msgstr ""

#: ../../source/specifications/core-metadata.rst:185
msgid ""
"A string stating the markup syntax (if any) used in the distribution's "
"description, so that tools can intelligently render the description."
msgstr ""

#: ../../source/specifications/core-metadata.rst:188
msgid ""
"Historically, PyPI supported descriptions in plain text and "
"`reStructuredText (reST) "
"<http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html>`_, "
"and could render reST into HTML. However, it is common for distribution "
"authors to write the description in `Markdown "
"<https://daringfireball.net/projects/markdown/>`_ (`RFC 7763 "
"<https://tools.ietf.org/html/rfc7763>`_) as many code hosting sites "
"render Markdown READMEs, and authors would reuse the file for the "
"description. PyPI didn't recognize the format and so could not render the"
" description correctly. This resulted in many packages on PyPI with "
"poorly-rendered descriptions when Markdown is left as plain text, or "
"worse, was attempted to be rendered as reST. This field allows the "
"distribution author to specify the format of their description, opening "
"up the possibility for PyPI and other tools to be able to render Markdown"
" and other formats."
msgstr ""

#: ../../source/specifications/core-metadata.rst:202
msgid ""
"The format of this field is the same as the ``Content-Type`` header in "
"HTTP (i.e.: `RFC 1341 <https://www.w3.org/Protocols/rfc1341/4_Content-"
"Type.html>`_). Briefly, this means that it has a ``type/subtype`` part "
"and then it can optionally have a number of parameters:"
msgstr ""

#: ../../source/specifications/core-metadata.rst:208
msgid "Format::"
msgstr ""

#: ../../source/specifications/core-metadata.rst:212
msgid "The ``type/subtype`` part has only a few legal values:"
msgstr ""

#: ../../source/specifications/core-metadata.rst:214
msgid "``text/plain``"
msgstr ""

#: ../../source/specifications/core-metadata.rst:215
msgid "``text/x-rst``"
msgstr ""

#: ../../source/specifications/core-metadata.rst:216
msgid "``text/markdown``"
msgstr ""

#: ../../source/specifications/core-metadata.rst:218
msgid ""
"The ``charset`` parameter can be used to specify the character encoding "
"of the description. The only legal value is ``UTF-8``. If omitted, it is "
"assumed to be ``UTF-8``."
msgstr ""

#: ../../source/specifications/core-metadata.rst:222
msgid ""
"Other parameters might be specific to the chosen subtype. For example, "
"for the ``markdown`` subtype, there is an optional ``variant`` parameter "
"that allows specifying the variant of Markdown in use (defaults to "
"``GFM`` if not specified). Currently, two variants are recognized:"
msgstr ""

#: ../../source/specifications/core-metadata.rst:227
msgid ""
"``GFM`` for `Github-flavored Markdown "
"<https://tools.ietf.org/html/rfc7764#section-3.2>`_"
msgstr ""

#: ../../source/specifications/core-metadata.rst:229
msgid ""
"``CommonMark`` for `CommonMark "
"<https://tools.ietf.org/html/rfc7764#section-3.5>`_"
msgstr ""

#: ../../source/specifications/core-metadata.rst:248
msgid ""
"If a ``Description-Content-Type`` is not specified, then applications "
"should attempt to render it as ``text/x-rst; charset=UTF-8`` and fall "
"back to ``text/plain`` if it is not valid rst."
msgstr ""

#: ../../source/specifications/core-metadata.rst:252
msgid ""
"If a ``Description-Content-Type`` is an unrecognized value, then the "
"assumed content type is ``text/plain`` (Although PyPI will probably "
"reject anything with an unrecognized value)."
msgstr ""

#: ../../source/specifications/core-metadata.rst:256
msgid ""
"If the ``Description-Content-Type`` is ``text/markdown`` and ``variant`` "
"is not specified or is set to an unrecognized value, then the assumed "
"``variant`` is ``GFM``."
msgstr ""

#: ../../source/specifications/core-metadata.rst:260
msgid ""
"So for the last example above, the ``charset`` defaults to ``UTF-8`` and "
"the ``variant`` defaults to ``GFM`` and thus it is equivalent to the "
"example before it."
msgstr ""

#: ../../source/specifications/core-metadata.rst:267
msgid "Keywords"
msgstr ""

#: ../../source/specifications/core-metadata.rst:271
msgid ""
"A list of additional keywords to be used to assist searching for the "
"distribution in a larger catalog."
msgstr ""

#: ../../source/specifications/core-metadata.rst:281
msgid "Home-page"
msgstr ""

#: ../../source/specifications/core-metadata.rst:285
msgid "A string containing the URL for the distribution's home page."
msgstr ""

#: ../../source/specifications/core-metadata.rst:293
msgid "Download-URL"
msgstr ""

#: ../../source/specifications/core-metadata.rst:297
msgid ""
"A string containing the URL from which this version of the distribution "
"can be downloaded.  (This means that the URL can't be something like "
"\".../BeagleVote-latest.tgz\", but instead must be "
"\".../BeagleVote-0.45.tgz\".)"
msgstr ""

#: ../../source/specifications/core-metadata.rst:304
msgid "Author"
msgstr ""

#: ../../source/specifications/core-metadata.rst:308
msgid ""
"A string containing the author's name at a minimum; additional contact "
"information may be provided."
msgstr ""

#: ../../source/specifications/core-metadata.rst:319
msgid "Author-email"
msgstr ""

#: ../../source/specifications/core-metadata.rst:323
msgid ""
"A string containing the author's e-mail address.  It can contain a name "
"and e-mail address in the legal forms for a RFC-822 ``From:`` header."
msgstr ""

#: ../../source/specifications/core-metadata.rst:331
#: ../../source/specifications/core-metadata.rst:374
msgid ""
"Per RFC-822, this field may contain multiple comma-separated e-mail "
"addresses::"
msgstr ""

#: ../../source/specifications/core-metadata.rst:339
msgid "Maintainer"
msgstr ""

#: ../../source/specifications/core-metadata.rst:343
msgid ""
"A string containing the maintainer's name at a minimum; additional "
"contact information may be provided."
msgstr ""

#: ../../source/specifications/core-metadata.rst:346
msgid ""
"Note that this field is intended for use when a project is being "
"maintained by someone other than the original author:  it should be "
"omitted if it is identical to ``Author``."
msgstr ""

#: ../../source/specifications/core-metadata.rst:358
msgid "Maintainer-email"
msgstr ""

#: ../../source/specifications/core-metadata.rst:362
msgid ""
"A string containing the maintainer's e-mail address.  It can contain a "
"name and e-mail address in the legal forms for a RFC-822 ``From:`` "
"header."
msgstr ""

#: ../../source/specifications/core-metadata.rst:366
msgid ""
"Note that this field is intended for use when a project is being "
"maintained by someone other than the original author:  it should be "
"omitted if it is identical to ``Author-email``."
msgstr ""

#: ../../source/specifications/core-metadata.rst:382
msgid "License"
msgstr ""

#: ../../source/specifications/core-metadata.rst:386
msgid ""
"Text indicating the license covering the distribution where the license "
"is not a selection from the \"License\" Trove classifiers. See "
":ref:`\"Classifier\" <metadata-classifier>` below. This field may also be"
" used to specify a particular version of a license which is named via the"
" ``Classifier`` field, or to indicate a variation or exception to such a "
"license."
msgstr ""

#: ../../source/specifications/core-metadata.rst:405
msgid "Classifier (multiple use)"
msgstr ""

#: ../../source/specifications/core-metadata.rst:409
msgid ""
"Each entry is a string giving a single classification value for the "
"distribution.  Classifiers are described in :pep:`301`, and the Python "
"Package Index publishes a dynamic list of `currently defined classifiers "
"<https://pypi.org/classifiers/>`__."
msgstr ""

#: ../../source/specifications/core-metadata.rst:414
#: ../../source/specifications/core-metadata.rst:473
#: ../../source/specifications/core-metadata.rst:500
#: ../../source/specifications/core-metadata.rst:614
#: ../../source/specifications/core-metadata.rst:638
msgid "This field may be followed by an environment marker after a semicolon."
msgstr ""

#: ../../source/specifications/core-metadata.rst:423
msgid "Requires-Dist (multiple use)"
msgstr ""

#: ../../source/specifications/core-metadata.rst:426
#: ../../source/specifications/core-metadata.rst:487
#: ../../source/specifications/core-metadata.rst:586
#: ../../source/specifications/core-metadata.rst:627
msgid ""
"The field format specification was relaxed to accept the syntax used by "
"popular publishing tools."
msgstr ""

#: ../../source/specifications/core-metadata.rst:430
msgid ""
"Each entry contains a string naming some other distutils project required"
" by this distribution."
msgstr ""

#: ../../source/specifications/core-metadata.rst:433
msgid "The format of a requirement string contains from one to four parts:"
msgstr ""

#: ../../source/specifications/core-metadata.rst:435
msgid ""
"A project name, in the same format as the ``Name:`` field. The only "
"mandatory part."
msgstr ""

#: ../../source/specifications/core-metadata.rst:437
msgid ""
"A comma-separated list of 'extra' names. These are defined by the "
"required project, referring to specific features which may need extra "
"dependencies."
msgstr ""

#: ../../source/specifications/core-metadata.rst:440
msgid ""
"A version specifier. Tools parsing the format should accept optional "
"parentheses around this, but tools generating it should not use "
"parentheses."
msgstr ""

#: ../../source/specifications/core-metadata.rst:443
msgid ""
"An environment marker after a semicolon. This means that the requirement "
"is only needed in the specified conditions."
msgstr ""

#: ../../source/specifications/core-metadata.rst:446
msgid "See :pep:`508` for full details of the allowed format."
msgstr ""

#: ../../source/specifications/core-metadata.rst:448
msgid ""
"The project names should correspond to names as found on the `Python "
"Package Index`_."
msgstr ""

#: ../../source/specifications/core-metadata.rst:451
msgid ""
"Version specifiers must follow the rules described in :doc:`version-"
"specifiers`."
msgstr ""

#: ../../source/specifications/core-metadata.rst:463
msgid "Requires-Python"
msgstr ""

#: ../../source/specifications/core-metadata.rst:467
msgid ""
"This field specifies the Python version(s) that the distribution is "
"guaranteed to be compatible with. Installation tools may look at this "
"when picking which version of a project to install."
msgstr ""

#: ../../source/specifications/core-metadata.rst:471
msgid "The value must be in the format specified in :doc:`version-specifiers`."
msgstr ""

#: ../../source/specifications/core-metadata.rst:484
msgid "Requires-External (multiple use)"
msgstr ""

#: ../../source/specifications/core-metadata.rst:491
msgid ""
"Each entry contains a string describing some dependency in the system "
"that the distribution is to be used.  This field is intended to serve as "
"a hint to downstream project maintainers, and has no semantics which are "
"meaningful to the ``distutils`` distribution."
msgstr ""

#: ../../source/specifications/core-metadata.rst:496
msgid ""
"The format of a requirement string is a name of an external dependency, "
"optionally followed by a version declaration within parentheses."
msgstr ""

#: ../../source/specifications/core-metadata.rst:502
msgid ""
"Because they refer to non-Python software releases, version numbers for "
"this field are **not** required to conform to the format specified in PEP"
" 440:  they should correspond to the version scheme used by the external "
"dependency."
msgstr ""

#: ../../source/specifications/core-metadata.rst:507
msgid "Notice that there's is no particular rule on the strings to be used."
msgstr ""

#: ../../source/specifications/core-metadata.rst:517
msgid "Project-URL (multiple-use)"
msgstr ""

#: ../../source/specifications/core-metadata.rst:521
msgid ""
"A string containing a browsable URL for the project and a label for it, "
"separated by a comma."
msgstr ""

#: ../../source/specifications/core-metadata.rst:528
msgid "The label is a free text limited to 32 signs."
msgstr ""

#: ../../source/specifications/core-metadata.rst:535
msgid "Provides-Extra (multiple use)"
msgstr ""

#: ../../source/specifications/core-metadata.rst:539
msgid ""
"A string containing the name of an optional feature. Must be a valid "
"Python identifier. May be used to make a dependency conditional on "
"whether the optional feature has been requested."
msgstr ""

#: ../../source/specifications/core-metadata.rst:548
msgid ""
"A second distribution requires an optional dependency by placing it "
"inside square brackets, and can request multiple features by separating "
"them with a comma (,). The requirements are evaluated for each requested "
"feature and added to the set of requirements for the distribution."
msgstr ""

#: ../../source/specifications/core-metadata.rst:558
msgid ""
"Two feature names `test` and `doc` are reserved to mark dependencies that"
" are needed for running automated tests and generating documentation, "
"respectively."
msgstr ""

#: ../../source/specifications/core-metadata.rst:562
msgid ""
"It is legal to specify ``Provides-Extra:`` without referencing it in any "
"``Requires-Dist:``."
msgstr ""

#: ../../source/specifications/core-metadata.rst:567
msgid "Rarely Used Fields"
msgstr ""

#: ../../source/specifications/core-metadata.rst:569
msgid ""
"The fields in this section are currently rarely used, as their design was"
" inspired by comparable mechanisms in Linux package management systems, "
"and it isn't at all clear how tools should interpret them in the context "
"of an open index server such as `PyPI <https://pypi.org>`__."
msgstr ""

#: ../../source/specifications/core-metadata.rst:574
msgid ""
"As a result, popular installation tools ignore them completely, which in "
"turn means there is little incentive for package publishers to set them "
"appropriately. However, they're retained in the metadata specification, "
"as they're still potentially useful for informational purposes, and can "
"also be used for their originally intended purpose in combination with a "
"curated package repository."
msgstr ""

#: ../../source/specifications/core-metadata.rst:583
msgid "Provides-Dist (multiple use)"
msgstr ""

#: ../../source/specifications/core-metadata.rst:590
msgid ""
"Each entry contains a string naming a Distutils project which is "
"contained within this distribution.  This field *must* include the "
"project identified in the ``Name`` field, followed by the version : Name "
"(Version)."
msgstr ""

#: ../../source/specifications/core-metadata.rst:595
msgid ""
"A distribution may provide additional names, e.g. to indicate that "
"multiple projects have been bundled together.  For instance, source "
"distributions of the ``ZODB`` project have historically included the "
"``transaction`` project, which is now available as a separate "
"distribution.  Installing such a source distribution satisfies "
"requirements for both ``ZODB`` and ``transaction``."
msgstr ""

#: ../../source/specifications/core-metadata.rst:602
msgid ""
"A distribution may also provide a \"virtual\" project name, which does "
"not correspond to any separately-distributed project:  such a name might "
"be used to indicate an abstract capability which could be supplied by one"
" of multiple projects.  E.g., multiple projects might supply RDBMS "
"bindings for use by a given ORM:  each project might declare that it "
"provides ``ORM-bindings``, allowing other projects to depend only on "
"having at most one of them installed."
msgstr ""

#: ../../source/specifications/core-metadata.rst:610
msgid ""
"A version declaration may be supplied and must follow the rules described"
" in :doc:`version-specifiers`. The distribution's version number will be "
"implied if none is specified."
msgstr ""

#: ../../source/specifications/core-metadata.rst:624
msgid "Obsoletes-Dist (multiple use)"
msgstr ""

#: ../../source/specifications/core-metadata.rst:631
msgid ""
"Each entry contains a string describing a distutils project's "
"distribution which this distribution renders obsolete, meaning that the "
"two projects should not be installed at the same time."
msgstr ""

#: ../../source/specifications/core-metadata.rst:635
msgid ""
"Version declarations can be supplied.  Version numbers must be in the "
"format specified in :doc:`version-specifiers`."
msgstr ""

#: ../../source/specifications/core-metadata.rst:640
msgid ""
"The most common use of this field will be in case a project name changes,"
" e.g. Gorgon 2.3 gets subsumed into Torqued Python 1.0. When you install "
"Torqued Python, the Gorgon distribution should be removed."
msgstr ""

#: ../../source/specifications/core-metadata.rst:653
msgid "reStructuredText markup: http://docutils.sourceforge.net/"
msgstr ""

#: ../../source/specifications/core-metadata.rst:658
msgid "RFC 822 Long Header Fields: http://www.freesoft.org/CIE/RFC/822/7.htm"
msgstr ""

